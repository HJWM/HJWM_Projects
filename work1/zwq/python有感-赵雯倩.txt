python基础：
1.采用缩进方式，不用{}，并应统一使用4个空格
2.大小写敏感
数据类型和变量：
一、数据类型：
 1.整数：表示方法和数学上使用的一样，负数前面加负号；有时使用十六进制表示，前面加0x前缀
 2.浮点数：使用数学写法，当表示很大或很小的浮点数时，使用科学计数法表示，1.23e9  
 3.字符串：
①字符串是以单引号'或双引号"括起来的任意文本，当想让字符串包括单引或双引号时，使用转义字符\,如果需要转义的字符太多，可使用r''  ''表示内部的字符串默认不转义
例：print(r'''hello,\n
world''')
输出结果为hello \n world
	  ②如果字符串内部有很多换行，用\n写在一行里不好阅读，为了简化，Python允许用'''...'''的格式表示多行内容
3.布尔值：
①直接用True、False表示布尔值（注意大小写）
 ②布尔值可以用and、or和not运算。
and运算是与运算，只有所有都为True，and运算结果才是True
or运算是或运算，只要其中有一个为True，or运算结果就是True
not运算是非运算，它是一个单目运算符，把True变成False，False变成True
二、变量：
1.变量不仅可以是数字，还可以是任意数据类型
2.变量名必须是大小写英文、数字和_的组合，且不能用数字开头
3.变量的赋值：同一个变量可以反复赋值，而且可以是不同类型的变量。这种变量本身类型不固定的语言称之为动态语言，与之对应的是静态语言。静态语言在定义变量时必须指定变量类型，如果赋值的时候类型不匹配，就会报错。
三、常量
通常用全部大写的变量名表示常量
四、除法
  /除法计算结果是浮点数，即使是两个整数恰好整除，结果也是浮点数
//，称为地板除，两个整数的除法仍然是整数，只取结果的整数部分
五、理解
1.Python支持多种数据类型，在计算机内部，可以把任何数据都看成一个“对象”，而变量就是在程序中用来指向这些数据对象的，对变量赋值就是把数据和变量给关联起来。
2.Python的整数没有大小限制
字符串和编码
1.Unicode把所有语言都统一到一套编码里，这样就不会再有乱码问题了，用两个字节表示一个字符
2.“可变长编码”的UTF-8编码。UTF-8编码把一个Unicode字符根据不同的数字大小编码成1-6个字节，常用的英文字母被编码成1个字节，汉字通常是3个字节，只有很生僻的字符才会被编码成4-6个字节。
3.对于单个字符的编码，Python提供了ord()函数获取字符的整数表示，chr()函数把编码转换为对应的字符
4.\u表示是个unicode字符，\x对应的是UTF-8编码的数据
5.编码为指定的bytes
6.含有中文时，要想正常地使用，三点注意到UTF-8
7.格式化：
%运算符就是用来格式化字符串的。在字符串内部，%s表示用字符串替换，%d表示用整数替换，有几个%?占位符，后面就跟几个变量或者值，顺序要对应好。如果只有一个%?，括号可以省略。
格式化整数和浮点数还可以指定是否补0和整数与小数的位数
>>>'%2d-%02d'%(3,1)'3-01'         >>>'%.2f'%3.1415926'3.14'
使用list和tuple
list的索引、删除、新建、替换等操作
Tuple一旦建立不能修改
条件判断：if...elif...else...
循环：for...in... ; while循环
      Break：跳出循环 continue：跳出本次循环
Dict和set：key值均为不可变对象，dict以key-value存储，set是key的集合

函数
调用函数:介绍abs函数，max函数，int函数和str函数等函数的使用方法。可以将函数名赋给一个变量
定义函数:使用def定义函数，函数返回值用return语句返回。可以自己定义函数并进行储存导入。定义函数有时会需要参数检查
函数的参数:默认参数简化调用，必须指向不可变对象。可变参数可以自动组装为tuple。关键字参数可组装为dic
递归函数:与循环相处逻辑更清晰

高级特性:简化代码
切片:对list或tuple简化切片操作
迭代:迭代即遍历，使用for循环
列表生成式:可以快速生成list
生成器:一边循环一边计算，generator函数
迭代器:可以被next()函数调用并不断返回下一个值的对象称为迭代器：Iterator。


函数式编程
高阶函数:变量可以指向函数，其中，函数名即为一个变量，让一个函数接收另一函数作为参数，被称为高阶函数
filter:从序列中筛选符合条件的元素
sorted:对list进行排序
返回函数:函数可以作为另一函数的返回结果，注意不能使用可变的参数
匿名函数:不需要取函数名
装饰器:在代码运行期间动态增加功能的方式，为“装饰器”（Decorator）。本质上，decorator就是一个返回函数的高阶函数。
偏函数:有多个参数时，functools.partial，把一个函数的某些参数给固定住（也就是设置默认值），返回一个新的函数。

模块
使用模块:模块的导入，通过_前缀来实现作用域的规定。
安装第三方模块:pip指令，anaconda程序

面向对象编程
类和实例:类是创建实例的模板，而实例则是一个一个具体的对象，方法可以直接访问实例的数据；
访问限制:确保了外部代码不能随意修改对象内部的状态
继承和多态:继承可以获得父类的全部功能并可以修改，多态可以使调用时不管细节
获取对象信息:通过type函数等拿到对象内部的数据
实例属性和类属性:给实例绑定属性的方法是通过实例变量，或者通过self变量。类属性属于类所有，所有实例共享一个属性；两者名字不能相同

面向对象高级编程
使用_slots_:对于类中特定的实例进行属性限制
使用@property:既能检查参数，又可以用类似属性这样简单的方式来访问类的变量
多重继承:一个子类就可以同时获得多个父类的所有功能，设计时使用Mixlin
定制类:Python的class中有许多有特殊用途的函数，可以帮助我们定制类。__str__，__
使用枚举类:为枚举类型定义一个class类型，然后，每个常量都是class的一个唯一实例。Enum类
使用元类:先定义metaclass，就可以创建类，最后创建实例。
